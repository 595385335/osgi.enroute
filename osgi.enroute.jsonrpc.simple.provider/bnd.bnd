#
# OSGI ENROUTE JSONRPC SIMPLE PROVIDER BUNDLE 
#


base.version: 1.1.3
Bundle-Description: 				\
	A simple implementation of the JSON RPC 2.0 specification. This bundle \
	tracks any JSONRPC services. It assumes all public methods on the implementation \
	class are fair game and maps to them to a JSON RPC endpoint. These methods
	are then available in Javascript.
Export-Package: \
	osgi.enroute.jsonrpc.api;provide:=true,\
	osgi.enroute.jsonrpc.dto;provide:=true

Private-Package:  \
	osgi.enroute.jsonrpc.simple.provider
	
# TODO update once we got ${packageattribute}
Provide-Capability: 	\
	osgi.enroute.webresource; \
		osgi.enroute.webresource=/osgi/enroute/jsonrpc; \
		root=/static/osgi/enroute/jsonrpc; \
		version:Version=1.0.0

Conditional-Package: aQute.lib*

-buildpath:  \
	osgi.enroute.base.api;version=1.0,\
	biz.aQute.bndlib;packages=*

-testpath: \
	osgi.enroute.junit.wrapper

-includeresource: {readme.md}, {static=static}, LICENSE.txt=${build}/licenses/ASL-2.0.txt


-runrequires:  \
	osgi.identity;filter:='(osgi.identity=osgi.enroute.jsonrpc.simple.provider)'
-runbundles:  \
	org.apache.felix.configadmin;version='[1.8.0,1.8.1)',\
	org.apache.felix.eventadmin;version='[1.3.2,1.3.3)',\
	org.apache.felix.http.bundle;version='[2.3.0,2.3.1)',\
	org.apache.felix.log;version='[1.0.1,1.0.2)',\
	org.apache.felix.metatype;version='[1.0.10,1.0.11)',\
	org.apache.felix.scr;version='[1.8.2,1.8.3)',\
	osgi.enroute.jsonrpc.simple.provider;version=latest
